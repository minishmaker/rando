#ifdef hash
#ifndef seedHash1
	#define seedHash1 "0"
#endif
#ifndef seedHash2
	#define seedHash2 "0"
#endif
#ifndef seedHash3
	#define seedHash3 "0"
#endif
#ifndef seedHash4
	#define seedHash4 "0"
#endif
#ifndef seedHash5
	#define seedHash5 "0"
#endif
#ifndef optionsHash1
	#define optionsHash1 "0"
#endif
#ifndef optionsHash2
	#define optionsHash2 "0"
#endif

//write hash to save string, file will be erased if hash doesn't match
PUSH; ORG $11DBD5; BYTE seedHash1 seedHash2 seedHash3 seedHash4 seedHash5 optionsHash1 optionsHash2; POP

//check save hash against expected values, if it doesn't match then erase the save
PUSH; ORG $559F2; SHORT 0; jumpToHack(hashCheck); POP
ALIGN 4
hashCheck:
#incbin "asm/hashCheck.dmp"

//all titlescreen texts are the choose a file one
PUSH; ORG $121490; BYTE 0x28 0x28 0x28 0x28 0x28 0x28 0x28 0x28; POP

//and don't make it go away for language select
PUSH; ORG $8E79E; SHORT 0; POP

//erase choose a file text
#define blankChooseColor "WORD 0x55555555;"
#define blankChooseTile  "blankChooseColor blankChooseColor blankChooseColor blankChooseColor blankChooseColor blankChooseColor blankChooseColor blankChooseColor"
#define blankChooseImage "blankChooseTile blankChooseTile blankChooseTile blankChooseTile blankChooseTile blankChooseTile blankChooseTile blankChooseTile blankChooseTile blankChooseTile blankChooseTile blankChooseTile blankChooseTile blankChooseTile blankChooseTile blankChooseTile blankChooseTile blankChooseTile blankChooseTile blankChooseTile blankChooseTile blankChooseTile blankChooseTile blankChooseTile blankChooseTile blankChooseTile"
PUSH
ORG $8F3430+0x800; blankChooseImage
ORG $8F4A30+0x800; blankChooseImage
ORG $8F6030+0x800; blankChooseImage
ORG $8F7630+0x800; blankChooseImage
ORG $8F8C30+0x800; blankChooseImage
POP

//change choose a file sprites priority
PUSH
ORG $31EECA; BYTE 0x7C
ORG $31EECF; BYTE 0x7C
ORG $31EED4; BYTE 0x7C
ORG $31EED9; BYTE 0x7C
ORG $31EEDE; BYTE 0x7C
ORG $31EEE3; BYTE 0x7C
ORG $31EEE8; BYTE 0x7C
ORG $31EEED; BYTE 0x7C
ORG $31EEF2; BYTE 0x7C
ORG $31EEF7; BYTE 0x7C
ORG $31EEFC; BYTE 0x7C
ORG $31EF01; BYTE 0x7C
POP

//load the graphics and palettes for the hash icons and draw them
PUSH; ORG $5049C; jumpToHack(hashLoad); POP
ALIGN 4
hashLoad:
#incbin "asm/hashLoad.dmp"
POIN hashIconsGraphics
POIN hashIconsPalette
POIN hashIconsTable

PUSH; ORG $4FFD0; jumpToHack(hashDraw); POP
ALIGN 4
hashDraw:
#incbin "asm/hashDraw.dmp"
POIN hashIconsTable

ALIGN 4
hashIconsGraphics:
#incbin "hashicons.img.bin"

ALIGN 4
hashIconsPalette:
#incbin "hashicons.pal.bin"

//just a table of palettes to use for each icon
ALIGN 4
hashIconsTable:
SHORT 0x4000 //00
SHORT 0x2000 //01
SHORT 0x0000 //02
SHORT 0x1000 //03
SHORT 0x1000 //04
SHORT 0x0000 //05
SHORT 0x1000 //06
SHORT 0x0000 //07
SHORT 0x0000 //08
SHORT 0x1000 //09
SHORT 0x1000 //10
SHORT 0x0000 //11
SHORT 0x1000 //12
SHORT 0x4000 //13
SHORT 0x1000 //14
SHORT 0x1000 //15
SHORT 0x1000 //16
SHORT 0x1000 //17
SHORT 0x5000 //18
SHORT 0x0000 //19
SHORT 0x1000 //20
SHORT 0x2000 //21
SHORT 0x0000 //22
SHORT 0x4000 //23
SHORT 0x1000 //24
SHORT 0x0000 //25
SHORT 0x0000 //26
SHORT 0x1000 //27
SHORT 0x0000 //28
SHORT 0x4000 //29
SHORT 0x1000 //30
SHORT 0x1000 //31
SHORT 0x0000 //32
SHORT 0x1000 //33
SHORT 0x2000 //34
SHORT 0x0000 //35
SHORT 0x2000 //36
SHORT 0x1000 //37
SHORT 0x1000 //38
SHORT 0x1000 //39
SHORT 0x0000 //40
SHORT 0x2000 //41
SHORT 0x2000 //42
SHORT 0x1000 //43
SHORT 0x1000 //44
SHORT 0x0000 //45
SHORT 0x0000 //46
SHORT 0x2000 //47
SHORT 0x1000 //48
SHORT 0x0000 //49
SHORT 0x4000 //50
SHORT 0x3000 //51
SHORT 0x3000 //52
SHORT 0x3000 //53
SHORT 0x3000 //54
SHORT 0x0000 //55
SHORT 0x1000 //56
SHORT 0x0000 //57
SHORT 0x4000 //58
SHORT 0x1000 //59
SHORT 0x0000 //60
SHORT 0x1000 //61
SHORT 0x2000 //62
SHORT 0x4000 //63
#endif
