#ifndef heartscolor
	#define heartscolor
	#define heartscolorred
#endif
#ifdef heartscolor
//backwards compatibility for the old hearts
#ifdef heartscolorred
	#define heartFillColor "0x095F"
	#define heartEdgeColor "0x7FFF"
#endif
#ifdef heartscoloryellow
	#define heartFillColor "0x1F9F"
	#define heartEdgeColor "0x0000"
#endif
#ifdef heartscolorblue
	#define heartFillColor "0x7A85"
	#define heartEdgeColor "0x7FFF"
#endif
#ifdef heartscolorsky
	#define heartFillColor "0x7FB5"
	#define heartEdgeColor "0x0000"
#endif
#ifdef heartscolorgreen
	#define heartFillColor "0x0EA4"
	#define heartEdgeColor "0x7FFF"
#endif
#ifdef heartscolorlime
	#define heartFillColor "0x0FC9"
	#define heartEdgeColor "0x0000"
#endif

//rainbow hearts
#ifdef heartscolorrainbow
#define heartFillColor "0x5749"
#define heartEdgeColor "0x7FFF"
PUSH; ORG $55AC0; jumpToHack(animatedHearts); POP
ALIGN 4
animatedHearts:
#incbin "asm/animatedHearts.dmp"
POIN rainbowHearts
ALIGN 4
rainbowHearts:
SHORT 0x5749 12
SHORT 0x3F49 12
SHORT 0x3B49 12
SHORT 0x274A 12
SHORT 0x2753 12
SHORT 0x2759 12
SHORT 0x26BA 12
SHORT 0x261A 12
SHORT 0x25DA 12
SHORT 0x257A 12
SHORT 0x253A 12
SHORT 0x3D3A 12
SHORT 0x613A 12
SHORT 0x61B6 12
SHORT 0x5E13 12
SHORT 0x5A90 12
SHORT 0xFFFF 0xFFFF //terminator
#endif

//custom color
#ifdef heartFillR
	#ifdef heartFillG
		#ifdef heartFillB
			#define heartFillColor "(((heartFillB&0x1F)<<10)|((heartFillG&0x1F)<<05)|((heartFillR&0x1F)<<00))"
		#endif
	#endif
#endif

#ifdef heartEdgeR
	#ifdef heartEdgeG
		#ifdef heartEdgeB
			#define heartEdgeColor "(((heartEdgeB&0x1F)<<10)|((heartEdgeG&0x1F)<<05)|((heartEdgeR&0x1F)<<00))"
		#endif
	#endif
#endif

//safety definitions
#ifndef heartFillColor
	#define heartFillColor "0x095F"
#endif
#ifndef heartEdgeColor
	#define heartEdgeColor "0x7FFF"
#endif

//get the new colors in
PUSH; ORG $5A2558; SHORT heartFillColor heartEdgeColor; POP

//make the wallets share colors
PUSH; ORG $1C54A; SHORT 0xB408; jumpToHack(walletPalette); POP
ALIGN 4
walletPalette:
#incbin "asm/walletPalette.dmp"
POIN walletColors
ALIGN 4
walletColors:
SHORT 0x0E06 0x0F28 //green
SHORT 0x5163 0x7E65 //blue
SHORT 0x0CAF 0x10D7 //red
SHORT 0x0CAF 0x10D7 //bigger red

//new wallet graphics for the color sharing
PUSH
ORG $5C3770
#incbin "wallets.img.bin"
POP

//make the heart sprites invisible
PUSH; ORG $2E8F60; WORD 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0; POP

//update the heart tile colors to the new free ones
#define heartspalette "0xF0"
#define fill1 "0x4"
#define back1 "0xB"
#define edge1 "0x5"
#define fill2 "(fill1<<4)"
#define back2 "(back1<<4)"
#define edge2 "(edge1<<4)"
#define emptypixels "0x00"
PUSH
//in-game hearts, tiles
//change the palette
ORG $C8654
BYTE 0x15 heartspalette 0x15 heartspalette 0x15 heartspalette 0x15 heartspalette 0x15 heartspalette 0x15 heartspalette 0x15 heartspalette 0x15 heartspalette 0x15 heartspalette 0x15 heartspalette
BYTE 0x11 heartspalette 0x11 heartspalette 0x11 heartspalette 0x11 heartspalette 0x11 heartspalette 0x11 heartspalette 0x11 heartspalette 0x11 heartspalette 0x11 heartspalette 0x11 heartspalette
ORG $1C849; BYTE heartspalette
ORG $1C82C; BYTE heartspalette 0x23; SHORT 0x021A 0x4311
//and the graphics
ORG $5C2D70
BYTE emptypixels emptypixels emptypixels emptypixels emptypixels emptypixels emptypixels 0x000|edge2 emptypixels emptypixels emptypixels 0x000|edge2 emptypixels emptypixels emptypixels 0x000|edge2
BYTE emptypixels emptypixels emptypixels emptypixels emptypixels emptypixels emptypixels emptypixels emptypixels emptypixels emptypixels emptypixels emptypixels emptypixels emptypixels emptypixels
BYTE edge1|edge2 edge1|0x000 edge1|edge2 edge1|0x000 back1|back2 back1|edge2 back1|back2 back1|edge2 back1|back2 back1|back2 back1|back2 back1|edge2 back1|back2 back1|back2 back1|back2 back1|edge2
BYTE edge1|back2 back1|back2 back1|back2 edge1|0x000 0x000|edge2 back1|back2 back1|edge2 emptypixels emptypixels edge1|back2 edge1|0x000 emptypixels emptypixels 0x000|edge2 emptypixels emptypixels
BYTE edge1|edge2 edge1|0x000 edge1|edge2 edge1|0x000 fill1|fill2 fill1|edge2 back1|back2 back1|edge2 fill1|fill2 fill1|fill2 back1|back2 back1|edge2 fill1|fill2 fill1|fill2 back1|back2 back1|edge2
BYTE edge1|back2 back1|back2 back1|back2 edge1|0x000 0x000|edge2 back1|back2 back1|edge2 emptypixels emptypixels edge1|back2 edge1|0x000 emptypixels emptypixels 0x000|edge2 emptypixels emptypixels
BYTE edge1|edge2 edge1|0x000 edge1|edge2 edge1|0x000 fill1|fill2 fill1|edge2 back1|back2 back1|edge2 fill1|fill2 fill1|fill2 back1|back2 back1|edge2 fill1|fill2 fill1|fill2 back1|back2 back1|edge2
BYTE edge1|fill2 fill1|fill2 back1|back2 edge1|0x000 0x000|edge2 fill1|fill2 back1|edge2 emptypixels emptypixels edge1|fill2 edge1|0x000 emptypixels emptypixels 0x000|edge2 emptypixels emptypixels
BYTE edge1|edge2 edge1|0x000 edge1|edge2 edge1|0x000 fill1|fill2 fill1|edge2 back1|back2 back1|edge2 fill1|fill2 fill1|fill2 back1|back2 back1|edge2 fill1|fill2 fill1|fill2 back1|back2 back1|edge2
BYTE edge1|fill2 fill1|fill2 fill1|fill2 edge1|0x000 0x000|edge2 fill1|fill2 fill1|edge2 emptypixels emptypixels edge1|fill2 edge1|0x000 emptypixels emptypixels 0x000|edge2 emptypixels emptypixels
BYTE edge1|edge2 edge1|0x000 edge1|edge2 edge1|0x000 fill1|fill2 fill1|edge2 fill1|fill2 fill1|edge2 fill1|fill2 fill1|fill2 fill1|fill2 fill1|edge2 fill1|fill2 fill1|fill2 fill1|fill2 fill1|edge2
BYTE edge1|fill2 fill1|fill2 fill1|fill2 edge1|0x000 0x000|edge2 fill1|fill2 fill1|edge2 emptypixels emptypixels edge1|fill2 edge1|0x000 emptypixels emptypixels 0x000|edge2 emptypixels emptypixels

//titlescreen hearts
//change the palette
ORG $FBE58; SHORT (0x251|heartspalette<<8) (0x251|heartspalette<<8) (0x251|heartspalette<<8) (0x251|heartspalette<<8) (0x251|heartspalette<<8) (0x251|heartspalette<<8) (0x251|heartspalette<<8) (0x251|heartspalette<<8) (0x251|heartspalette<<8) (0x251|heartspalette<<8) (0x24D|heartspalette<<8) (0x24D|heartspalette<<8) (0x24D|heartspalette<<8) (0x24D|heartspalette<<8) (0x24D|heartspalette<<8) (0x24D|heartspalette<<8) (0x24D|heartspalette<<8) (0x24D|heartspalette<<8) (0x24D|heartspalette<<8) (0x24D|heartspalette<<8)
ORG $5085C; SHORT (0x24C|heartspalette<<8)
ORG $50868; WORD (0x24D|heartspalette<<8)
//and the graphics
ORG $8E3C30
BYTE emptypixels emptypixels emptypixels emptypixels emptypixels emptypixels emptypixels 0x000|edge2 emptypixels emptypixels emptypixels 0x000|edge2 emptypixels emptypixels emptypixels 0x000|edge2
BYTE emptypixels emptypixels emptypixels emptypixels emptypixels emptypixels emptypixels emptypixels emptypixels emptypixels emptypixels emptypixels emptypixels emptypixels emptypixels emptypixels
BYTE edge1|edge2 edge1|0x000 edge1|edge2 edge1|0x000 back1|back2 back1|edge2 back1|back2 back1|edge2 back1|back2 back1|back2 back1|back2 back1|edge2 back1|back2 back1|back2 back1|back2 back1|edge2
BYTE edge1|back2 back1|back2 back1|back2 edge1|0x000 0x000|edge2 back1|back2 back1|edge2 emptypixels emptypixels edge1|back2 edge1|0x000 emptypixels emptypixels 0x000|edge2 emptypixels emptypixels
BYTE edge1|edge2 edge1|0x000 edge1|edge2 edge1|0x000 fill1|fill2 fill1|edge2 back1|back2 back1|edge2 fill1|fill2 fill1|fill2 back1|back2 back1|edge2 fill1|fill2 fill1|fill2 back1|back2 back1|edge2
BYTE edge1|back2 back1|back2 back1|back2 edge1|0x000 0x000|edge2 back1|back2 back1|edge2 emptypixels emptypixels edge1|back2 edge1|0x000 emptypixels emptypixels 0x000|edge2 emptypixels emptypixels
BYTE edge1|edge2 edge1|0x000 edge1|edge2 edge1|0x000 fill1|fill2 fill1|edge2 back1|back2 back1|edge2 fill1|fill2 fill1|fill2 back1|back2 back1|edge2 fill1|fill2 fill1|fill2 back1|back2 back1|edge2
BYTE edge1|fill2 fill1|fill2 back1|back2 edge1|0x000 0x000|edge2 fill1|fill2 back1|edge2 emptypixels emptypixels edge1|fill2 edge1|0x000 emptypixels emptypixels 0x000|edge2 emptypixels emptypixels
BYTE edge1|edge2 edge1|0x000 edge1|edge2 edge1|0x000 fill1|fill2 fill1|edge2 back1|back2 back1|edge2 fill1|fill2 fill1|fill2 back1|back2 back1|edge2 fill1|fill2 fill1|fill2 back1|back2 back1|edge2
BYTE edge1|fill2 fill1|fill2 fill1|fill2 edge1|0x000 0x000|edge2 fill1|fill2 fill1|edge2 emptypixels emptypixels edge1|fill2 edge1|0x000 emptypixels emptypixels 0x000|edge2 emptypixels emptypixels
BYTE edge1|edge2 edge1|0x000 edge1|edge2 edge1|0x000 fill1|fill2 fill1|edge2 fill1|fill2 fill1|edge2 fill1|fill2 fill1|fill2 fill1|fill2 fill1|edge2 fill1|fill2 fill1|fill2 fill1|fill2 fill1|edge2
BYTE edge1|fill2 fill1|fill2 fill1|fill2 edge1|0x000 0x000|edge2 fill1|fill2 fill1|edge2 emptypixels emptypixels edge1|fill2 edge1|0x000 emptypixels emptypixels 0x000|edge2 emptypixels emptypixels
POP
#endif

//change the color of the text arrow
PUSH
ORG $56AD4; SHORT 0x0080
ORG $691E70
#incbin "textBorders.img.bin"
POP

#ifndef barcolor
	#define barcolor
	#define barcolorgreen
#endif
#ifdef barcolor
#ifdef barcolorgreen
	#define splitBackground "0x0E06"
	#define splitFirst "0x0FE9"
	#define splitSecond "0x7FFF"
	#define splitThird "0x0F28"
	#define splitFourth "0x0E06"
#endif
#ifdef barcolorblue
	#define splitBackground "0x5163"
	#define splitFirst "0x7F89"
	#define splitSecond "0x7FFF"
	#define splitThird "0x7E65"
	#define splitFourth "0x5163"
#endif
#ifdef barcolorred
	#define splitBackground "0x0CAF"
	#define splitFirst "0x195F"
	#define splitSecond "0x7FFF"
	#define splitThird "0x10D7"
	#define splitFourth "0x0CAF"
#endif
#ifndef splitBackground
	#ifdef splitFourth
		#define splitBackground splitFourth
	#else
		#define splitBackground "0x0E06"
	#endif
#endif
#ifndef splitFirst
	#define splitFirst "0x0FE9"
#endif
#ifndef splitSecond
	#define splitSecond "0x7FFF"
#endif
#ifndef splitThird
	#define splitThird "0x0F28"
#endif
#ifndef splitFourth
	#define splitFourth splitBackground
#endif
//change the graphics for the split bar
PUSH
ORG $5C2E30
#incbin "bar.img.bin"
ORG $5C42B0
#incbin "bar.img.bin"
#incbin "bar.img.bin"
#incbin "bar.img.bin"
#incbin "bar.img.bin"
POP
//change the colors of the split bar
PUSH; ORG $5A255E; SHORT splitBackground splitFirst; POP
//and change the code so the right colors load in
PUSH; ORG $1C9AE; SHORT 0xB408; jumpToHack(splitColor); POP
ALIGN 4
splitColor:
#incbin "asm/splitColor.dmp"
WORD splitFirst
WORD splitSecond
WORD splitThird
WORD splitFourth
#endif

//and make the yellow numbers always the same, instead of being tied to the split bar
PUSH
ORG $5C4030
#incbin "numbers.img.bin"
POP
