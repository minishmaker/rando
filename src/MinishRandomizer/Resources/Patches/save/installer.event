//change save type to SRAM
PUSH
ORG $B0B4A
BYTE 0x00 0x04 0x0A 0x1C 0x40 0x0B 0xE0 0x21 0x09 0x05 0x41 0x18 0x07 0x31 0x00 0x23 0x08 0x78 0x10 0x70 0x01 0x33 0x01 0x32 0x01 0x39 0x07 0x2B 0xF8 0xD9 0x00 0x20 0x70 0xBC 0x02 0xBC 0x08 0x47
ORG $B0C0C
BYTE 0x70 0xB5 0x00 0x04 0x0A 0x1C 0x40 0x0B 0xE0 0x21 0x09 0x05 0x41 0x18 0x07 0x31 0x00 0x23 0x10 0x78 0x08 0x70 0x01 0x33 0x01 0x32 0x01 0x39 0x07 0x2B 0xF8 0xD9 0x00 0x20 0x70 0xBC 0x02 0xBC 0x08 0x47
POP

//remove save checksum and corrupted save deletion
PUSH; ORG $7CA68; SHORT 0xE015; POP

//handle saving, copying, erasing and creating the new save space
PUSH; ORG $7CC30; jumpToHack(newSaveSpace); POP
ALIGN 4
newSaveSpace:
#incbin "asm/newSaveSpace.dmp"

//handle loading the new save space into ram
PUSH; ORG $515F0; jumpToHack(newSaveLoad); POP
ALIGN 4
newSaveLoad:
#incbin "asm/newSaveLoad.dmp"

//keep count of specific enemy types killed, up to 10000 (which will display as 9999+), also keep track of when each enemy was first killed
PUSH; ORG $4A59C; jumpToHack(killCounter); POP
ALIGN 4
killCounter:
#incbin "asm/killCounter.dmp"
WORD 0x203FB00 //base offset of kill counters
POIN enemyKillTable
WORD (0x203FB00+(0x24*2)+3)&(0xFFFFFFFC) //base offset of kill timestamps, 4 aligned
//timestamp time killed for the bosses
PUSH; ORG $7C6C0; jumpToHack(bossKills); POP
ALIGN 4
bossKills:
#incbin "asm/bossKills.dmp"
WORD 0x203FBE0 //offset for boss times
ALIGN 4
enemyKillTable:
BYTE 0x00 //0x00 Octorok
BYTE 0x01 //0x01 Chuchu
BYTE 0x02 //0x02 Leever
BYTE 0x03 //0x03 Peahat
BYTE 0xFF //0x04
BYTE 0x04 //0x05 Darknut
BYTE 0xFF //0x06
BYTE 0x05 //0x07 Beetle
BYTE 0x06 //0x08 Keese
BYTE 0xFF //0x09
BYTE 0x01 //0x0A Rock Chuchu
BYTE 0x01 //0x0B Spiny Chuchu
BYTE 0xFF //0x0C
BYTE 0x07 //0x0D Moldorm
BYTE 0xFF //0x0E
BYTE 0x08 //0x0F Moldworm
BYTE 0x09 //0x10 Sluggula
BYTE 0x0A //0x11 Pesto
BYTE 0x0B //0x12 Puffstool
BYTE 0xFF //0x13
BYTE 0x0C //0x14 Like Like
BYTE 0x0D //0x15 Spear Moblin
BYTE 0xFF //0x16
BYTE 0x0C //0x17 Rupee Like
BYTE 0x0E //0x18 Madderpillar
BYTE 0xFF //0x19
BYTE 0x0F //0x1A Wallmaster
BYTE 0x03 //0x1B Bomb Peahat
BYTE 0xFF //0x1C
BYTE 0xFF //0x1D
BYTE 0x10 //0x1E Spiked Beetle
BYTE 0xFF //0x1F
BYTE 0x11 //0x20 Helmasaur
BYTE 0xFF //0x21
BYTE 0x12 //0x22 Bob-omb
BYTE 0x0F //0x23 Floormaster
BYTE 0xFF //0x24
BYTE 0xFF //0x25
BYTE 0x13 //0x26 Tektite
BYTE 0x14 //0x27 Wizzrobe
BYTE 0x14 //0x28 Fire Wizzrobe
BYTE 0x14 //0x29 Ice Wizzrobe
BYTE 0x15 //0x2A Armos
BYTE 0x16 //0x2B Eyegore
BYTE 0x17 //0x2C Rope
BYTE 0x0A //0x2D Small Pesto
BYTE 0x18 //0x2E Acro-Bandits
BYTE 0xFF //0x2F
BYTE 0x19 //0x30 Keaton
BYTE 0x1A //0x31 Crow
BYTE 0x1B //0x32 Mulldozer
BYTE 0xFF //0x33
BYTE 0x1C //0x34 Bubble
BYTE 0x1D //0x35 Spiny Beetle
BYTE 0xFF //0x36
BYTE 0xFF //0x37
BYTE 0xFF //0x38
BYTE 0xFF //0x39
BYTE 0xFF //0x3A
BYTE 0x1E //0x3B Gibdo
BYTE 0x00 //0x3C Golden Octorok
BYTE 0x13 //0x3D Golden Tektite
BYTE 0x17 //0x3E Golden Rope
BYTE 0x1F //0x3F Cloud Piranha
BYTE 0x20 //0x40 Scissors Beetle
BYTE 0xFF //0x41
BYTE 0x1E //0x42 Stalfos
BYTE 0x1E //0x43 Skull
BYTE 0xFF //0x44
BYTE 0x1A //0x45 Takkuri
BYTE 0x0D //0x46 Bow Moblin
BYTE 0x21 //0x47 Lakitu
BYTE 0xFF //0x48
BYTE 0xFF //0x49
BYTE 0xFF //0x4A
BYTE 0xFF //0x4B
BYTE 0x22 //0x4C Ball and Chain Soldier
BYTE 0xFF //0x4D
BYTE 0x23 //0x4E Ghini
BYTE 0xFF //0x4F
BYTE 0x23 //0x50 DHC Special Ghini

//save timestamps of when each item was (first) obtained
PUSH; ORG $7C4C4; jumpToHack(itemTimestamps); POP
ALIGN 4
itemTimestamps:
#incbin "asm/itemTimestamps.dmp"
WORD 0x203FC00 //base offset of item timestamps
POIN itemGetTable
//save how many times each item was (attempted to be) used
PUSH; ORG $772E4; jumpToHack(itemTimesUsed); POP
ALIGN 4
itemTimesUsed:
#incbin "asm/itemTimesUsed.dmp"
WORD 0x203FC00+(0x34*4) //base offset of item uses
POIN itemGetTable
ALIGN 4
itemGetTable:
BYTE 0xFF //0x00
BYTE 0x00 //0x01 Smith's Sword
BYTE 0x01 //0x02 White Sword
BYTE 0x02 //0x03 White Sword 2
BYTE 0x03 //0x04 White Sword 3
BYTE 0xFF //0x05
BYTE 0x04 //0x06 Four Sword
BYTE 0x05 //0x07 Bombs
BYTE 0x06 //0x08 Remote Bombs
BYTE 0x07 //0x09 Bow
BYTE 0x08 //0x0A Light Arrows
BYTE 0x09 //0x0B Boomerang
BYTE 0x0A //0x0C Magic Boomerang
BYTE 0x0B //0x0D Shield
BYTE 0x0C //0x0E Mirror Shield
BYTE 0x0D //0x0F Lantern (off)
BYTE 0x0D //0x10 Lantern (on)
BYTE 0x0E //0x11 Gust Jar
BYTE 0x0F //0x12 Cane of Pacci
BYTE 0x10 //0x13 Mole Mitts
BYTE 0x11 //0x14 Roc's Cape
BYTE 0x12 //0x15 Pegasus Boots
BYTE 0xFF //0x16
BYTE 0x13 //0x17 Ocarina
BYTE 0xFF //0x18
BYTE 0xFF //0x19
BYTE 0xFF //0x1A
BYTE 0xFF //0x1B
BYTE 0x14 //0x1C Bottle
BYTE 0x14 //0x1D Bottle
BYTE 0x14 //0x1E Bottle
BYTE 0x14 //0x1F Bottle
BYTE 0x14 //0x20 Bottle
BYTE 0x14 //0x21 Bottle
BYTE 0x14 //0x22 Bottle
BYTE 0x14 //0x23 Bottle
BYTE 0x14 //0x24 Bottle
BYTE 0x14 //0x25 Bottle
BYTE 0x14 //0x26 Bottle
BYTE 0x14 //0x27 Bottle
BYTE 0x14 //0x28 Bottle
BYTE 0x14 //0x29 Bottle
BYTE 0x14 //0x2A Bottle
BYTE 0x14 //0x2B Bottle
BYTE 0x14 //0x2C Bottle
BYTE 0x14 //0x2D Bottle
BYTE 0x14 //0x2E Bottle
BYTE 0x14 //0x2F Bottle
BYTE 0x14 //0x30 Bottle
BYTE 0x14 //0x31 Bottle
BYTE 0xFF //0x32
BYTE 0xFF //0x33
BYTE 0xFF //0x34
BYTE 0xFF //0x35
BYTE 0x15 //0x36 Bottle of Dog Food
BYTE 0x16 //0x37 Lon Lon Ranch Key
BYTE 0x17 //0x38 Wake-Up Mushroom
BYTE 0x18 //0x39 A Hyrulean Bestiary
BYTE 0x19 //0x3A Legend of the Picori
BYTE 0x1A //0x3B A History of Masks
BYTE 0x1B //0x3C Graveyard Key
BYTE 0x1C //0x3D Tingle Trophy
BYTE 0x1D //0x3E Carlov Medal
BYTE 0xFF //0x3F
BYTE 0x1E //0x40 Earth Element
BYTE 0x1F //0x41 Fire Element
BYTE 0x20 //0x42 Water Element
BYTE 0x21 //0x43 Wind Element
BYTE 0x22 //0x44 Grip Ring
BYTE 0x23 //0x45 Power Bracelets
BYTE 0x24 //0x46 Flippers
BYTE 0xFF //0x47
BYTE 0x25 //0x48 Spin Attack
BYTE 0x26 //0x49 Roll Attack
BYTE 0x27 //0x4A Dash Attack
BYTE 0x28 //0x4B Rock Breaker
BYTE 0x29 //0x4C Sword Beam
BYTE 0x2A //0x4D Great Spin Attack
BYTE 0x2B //0x4E Down Thrust
BYTE 0x2C //0x4F Peril Beam
BYTE 0xFF //0x50 [Dungeon Map]
BYTE 0xFF //0x51 [Compass]
BYTE 0xFF //0x52 [Big Key]
BYTE 0xFF //0x53 [Small Key]
BYTE 0xFF //0x54
BYTE 0xFF //0x55
BYTE 0xFF //0x56
BYTE 0xFF //0x57
BYTE 0xFF //0x58
BYTE 0xFF //0x59
BYTE 0xFF //0x5A
BYTE 0x2D //0x5B Jabber Nut
BYTE 0xFF //0x5C [Kinstone Piece]
BYTE 0xFF //0x5D
BYTE 0xFF //0x5E
BYTE 0xFF //0x5F
BYTE 0xFF //0x60
BYTE 0xFF //0x61
BYTE 0xFF //0x62 [Heart Container]
BYTE 0xFF //0x63 [Piece of Heart]
BYTE 0xFF //0x64 [Big Wallet]
BYTE 0xFF //0x65 [Big Bomb Bag]
BYTE 0xFF //0x66 [Large Quiver]
BYTE 0xFF //0x67
BYTE 0xFF //0x68
BYTE 0xFF //0x69
BYTE 0xFF //0x6A	
BYTE 0xFF //0x6B
BYTE 0xFF //0x6C
BYTE 0xFF //0x6D
BYTE 0xFF //0x6E
BYTE 0xFF //0x6F
BYTE 0x2E //0x70 Joy Butterfly (Shoot)
BYTE 0x2F //0x71 Joy Butterfly (Dig)
BYTE 0x30 //0x72 Joy Butterfly (Swim)
BYTE 0x31 //0x73 Fast Spin
BYTE 0x32 //0x74 Fast Split
BYTE 0x33 //0x75 Long Great Spin
BYTE 0xFF //0x76
BYTE 0xFF //0x77
BYTE 0xFF //0x78
BYTE 0xFF //0x79
BYTE 0xFF //0x7A
BYTE 0xFF //0x7B
BYTE 0xFF //0x7C
BYTE 0xFF //0x7D
BYTE 0xFF //0x7E
BYTE 0xFF //0x7F

//keep track of total time spent in-game, time spent in menus, time spent rolling, time spent in cutscenes
PUSH; ORG $55AC8; jumpToHack(timer); POP
ALIGN 4
timer:
#incbin "asm/timer.dmp"

//keep track of times rolled
PUSH; ORG $78932; SHORT 0xB408; jumpToHack(rolls); POP
ALIGN 4
rolls:
#incbin "asm/rolls.dmp"
WORD 0x203FE00+(00*2) //offset

//keep track of times bonked
PUSH; ORG $76512; SHORT 0xB408; jumpToHack(bonks); POP
ALIGN 4
bonks:
#incbin "asm/bonks.dmp"
WORD 0x203FE00+(01*2) //offset

//keep track of times link died
PUSH; ORG $51958; jumpToHack(gameOvers); POP
ALIGN 4
gameOvers:
#incbin "asm/gameOvers.dmp"
//WORD 0x203FE00+(02*2) //offset

//keep track of times link has been revived by a fairy
PUSH; ORG $7177A; SHORT 0xB408; jumpToHack(fairies); POP
ALIGN 4
fairies:
#incbin "asm/fairies.dmp"
//WORD 0x203FE00+(03*2) //offset

//WORD 0x203FE00+(04*2) //offset of times saved
//WORD 0x203FE00+(05*2) //offset of times loaded

PUSH; ORG $522E8; jumpToHack(rupees); POP
ALIGN 4
rupees:
#incbin "asm/rupees.dmp"
WORD 0x203FE00+(06*2) //offset

//WORD 0x203FE00+(07*2) //offset of times quickwarped

#include "credits/credits.event"
